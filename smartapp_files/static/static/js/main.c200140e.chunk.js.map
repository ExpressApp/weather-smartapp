{"version":3,"sources":["assets/logo.svg","constants/index.ts","redux/actions/ui.ts","redux/selectors/ui.ts","components/ui/main-loader/MainLoader.tsx","components/Main.tsx","components/Page1.tsx","components/Page2.tsx","components/App.tsx","redux/router.ts","redux/reducers/ui.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["COORDS","TYPES","INCREMENT_COUNTER","DECREMENT_COUNTER","LOAD_WEATHER","LOAD_WEATHER_SUCCESS","SET_TOP_LOADER","SET_MAIN_LOADER","incrementCounter","createAction","value","decrementCounter","loadWeather","lat","long","loadWeatherSuccess","weather","setMainLoader","topLoader","mainLoader","getWeather","createSelector","state","ui","timestamp","dayjs","unix","parseInt","dt","getMainLoader","MainLoader","useSelector","className","Main","dispatch","useDispatch","counter","exampleCounter","src","logo","alt","to","onClick","name","format","temp","main","description","Page1","Page2","App","React","useState","load","setLoad","useEffect","bridge","sendClientEvent","method","params","path","history","createBrowserHistory","reducers","payload","handleActions","rootReducer","combineReducers","router","connectRouter","exampleLoadWeatherSaga","rootUiSaga","put","url","call","fetch","response","json","forecast","Math","ceil","parseFloat","console","error","all","takeEvery","rootSaga","fork","store","initialState","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","e","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c200140e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const COORDS = {\n  lat: 52.611331,\n  long: 39.574318,\n}\n\nexport const TYPES = {\n  READY: 'ready',\n}\n","import { createAction } from 'redux-actions'\nimport { Weather } from '../../types'\n\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER'\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER'\nexport const LOAD_WEATHER = 'LOAD_WEATHER'\nexport const LOAD_WEATHER_SUCCESS = 'LOAD_WEATHER_SUCCESS'\nexport const SET_TOP_LOADER = 'SET_TOP_LOADER'\nexport const SET_MAIN_LOADER = 'SET_MAIN_LOADER'\n\nexport const incrementCounter = createAction(INCREMENT_COUNTER, ({ value }: { value: number }) => ({ value }))\nexport const decrementCounter = createAction(DECREMENT_COUNTER, ({ value }: { value: number }) => ({ value }))\nexport const loadWeather = createAction(LOAD_WEATHER, ({ lat, long }: { lat: number; long: number }) => ({ lat, long }))\nexport const loadWeatherSuccess = createAction(LOAD_WEATHER_SUCCESS, (weather: Weather) => weather)\nexport const setTopLoader = createAction(SET_TOP_LOADER, (topLoader: boolean) => topLoader)\nexport const setMainLoader = createAction(SET_MAIN_LOADER, (mainLoader: boolean) => mainLoader)\n\nexport type incrementCounterActionType = ReturnType<typeof incrementCounter>\nexport type decrementCounterActionType = ReturnType<typeof decrementCounter>\nexport type loadWeatherActionType = ReturnType<typeof loadWeather>\nexport type loadWeatherSuccessActionType = ReturnType<typeof loadWeatherSuccess>\nexport type setTopLoaderActionType = ReturnType<typeof setTopLoader>\nexport type setMainLoaderActionType = ReturnType<typeof setMainLoader>","import dayjs from 'dayjs'\nimport { createSelector } from 'reselect'\nimport { ApplicationState } from '../../types'\n\n// Generic types order: <State, Selector1, Selector2, ..., CurrentSelector>\nexport const getWeather = createSelector(\n  [(state: ApplicationState) => state.ui.weather],\n  weather => {\n    return {\n      ...weather,\n      timestamp: dayjs.unix(parseInt(weather.dt || '0', 10)),\n    }\n  }\n)\n\nexport const getTopLoader = createSelector(\n  [(state: ApplicationState) => state.ui.topLoader],\n  topLoader => topLoader\n)\n\nexport const getMainLoader = createSelector(\n  [(state: ApplicationState) => state.ui.mainLoader],\n  mainLoader => mainLoader\n)","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './MainLoader.scss'\nimport { getMainLoader } from '../../../redux/selectors/ui'\nimport { ApplicationState } from '../../../types/reducers'\n\nexport default function MainLoader() {\n  const mainLoader = useSelector<ApplicationState, boolean>(getMainLoader)\n\n  if (!mainLoader) return null\n\n  return (\n    <div className=\"main-loader\">\n      <div className=\"main-loader__spinner\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/logo.svg'\nimport { COORDS } from '../constants'\nimport { decrementCounter, incrementCounter, loadWeather } from '../redux/actions/ui'\nimport { getWeather } from '../redux/selectors/ui'\nimport '../styles/main.scss'\nimport { ApplicationState, GetWeatherSelectorResult } from '../types'\nimport MainLoader from './ui/main-loader/MainLoader'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n\n  const weather = useSelector<ApplicationState, GetWeatherSelectorResult>(getWeather)\n  const counter = useSelector<ApplicationState, number>(state => state.ui.exampleCounter)\n\n  const handleLoadWeather = () => dispatch(loadWeather({ lat: COORDS.lat, long: COORDS.long }))\n  const handleCounterPlus1 = () => dispatch(incrementCounter({ value: 1 }))\n  const handleCounterMinus1 = () => dispatch(decrementCounter({ value: 1 }))\n  const handleCounterPlus10 = () => dispatch(incrementCounter({ value: 10 }))\n  const handleCounterMinus10 = () => dispatch(decrementCounter({ value: 10 }))\n\n  return (\n    <div className=\"App\">\n      <MainLoader />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h3>\n          <Link to=\"/page1\">Page1</Link>\n          <Link to=\"/page2\">Page2</Link>\n        </h3>\n        <h3>\n          Counter example <code>{counter}</code>\n        </h3>\n        <div>\n          <button className=\"App-button\" onClick={handleCounterPlus1}>\n            +1\n          </button>\n          <button className=\"App-button\" onClick={handleCounterMinus1}>\n            -1\n          </button>\n          <button className=\"App-button\" onClick={handleCounterPlus10}>\n            +10\n          </button>\n          <button className=\"App-button\" onClick={handleCounterMinus10}>\n            -10\n          </button>\n        </div>\n        <h3>Fetch through redux-saga example</h3>\n        <button className=\"App-button\" onClick={handleLoadWeather}>\n          Load weather\n        </button>\n        {weather.dt && (\n          <code className=\"App-weather\">\n            <b>{weather.name}</b> [{weather.timestamp?.format('DD.MM.YYYY')}]<br/>\n            {weather.temp}°C, {weather.main}, {weather.description}\n          </code>\n        )}\n      </header>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Page1() {\n  return (\n    <div>\n      <Link to=\"/\">Back</Link>\n      <h1>Page #1</h1>\n      Edit code <code>src/components/Page1.tsx</code>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Page2() {\n  return (\n    <div>\n      <Link to=\"/\">Back</Link>\n      <h1>Page #2</h1>\n      Edit code <code>src/components/Page2.tsx</code>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Main from './Main'\nimport Page1 from './Page1'\nimport Page2 from './Page2'\nimport { Bridge as bridge } from '@unlimited/smartapp-sdk/build/main/index'\nimport { TYPES } from '../constants'\n\nexport default function App() {\n  const [load, setLoad] = React.useState(true)\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false)\n\n      bridge?.sendClientEvent({\n        method: TYPES.READY,\n        params: {}\n      })\n    }\n    \n  }, [load])\n  return (\n    <Switch>\n      <Route path=\"/page1\">\n        <Page1 />\n      </Route>\n      <Route path=\"/page2\">\n        <Page2 />\n      </Route>\n      <Route path=\"/\">\n        <Main />\n      </Route>\n    </Switch>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nconst history = createBrowserHistory()\n\nexport default history\n","import { handleActions } from 'redux-actions'\nimport { UiState } from '../../types'\nimport {\n  INCREMENT_COUNTER,\n  DECREMENT_COUNTER,\n  incrementCounterActionType,\n  decrementCounterActionType,\n  LOAD_WEATHER_SUCCESS,\n  loadWeatherSuccessActionType,\n  setMainLoaderActionType,\n  setTopLoaderActionType,\n  SET_MAIN_LOADER,\n  SET_TOP_LOADER,\n} from '../actions/ui'\n\nconst initialState: UiState = {\n  exampleCounter: 10,\n  weather: {\n    main: null,\n    description: null,\n    dt: null,\n    name: null,\n    temp: null,\n  },\n  topLoader: false,\n  mainLoader: false,\n}\n\nconst reducers = {\n  [INCREMENT_COUNTER]: (state: UiState, { payload: { value } }: incrementCounterActionType): UiState => {\n    return { ...state, exampleCounter: state.exampleCounter + value }\n  },\n  [DECREMENT_COUNTER]: (state: UiState, { payload: { value } }: decrementCounterActionType): UiState => {\n    return { ...state, exampleCounter: state.exampleCounter - value }\n  },\n  [LOAD_WEATHER_SUCCESS]: (state: UiState, { payload: weather }: loadWeatherSuccessActionType): UiState => {\n    return { ...state, weather: { ...weather } }\n  },\n  [SET_TOP_LOADER]: (state: UiState, { payload: topLoader }: setTopLoaderActionType): UiState => {\n    return {\n      ...state,\n      topLoader,\n    }\n  },\n  [SET_MAIN_LOADER]: (state: UiState, { payload: mainLoader }: setMainLoaderActionType): UiState => {\n    return {\n      ...state,\n      mainLoader,\n    }\n  }\n}\n\nexport const ui = handleActions<UiState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport history from '../router'\nimport { ui } from './ui'\nimport { ApplicationState } from '../../types'\n\nconst rootReducer = combineReducers<ApplicationState>({\n  ui,\n  router: connectRouter(history),\n})\n\nexport default rootReducer\n","import { takeEvery, call, all, put } from 'redux-saga/effects'\nimport { Weather } from '../../types'\nimport { loadWeatherActionType, loadWeatherSuccess, LOAD_WEATHER, setMainLoader } from '../actions/ui'\n\nexport function* exampleLoadWeatherSaga({ payload: { lat, long } }: loadWeatherActionType) {\n  try {\n    yield put(setMainLoader(true))\n    const url =\n      `https://api.openweathermap.org/data/2.5/` +\n      `weather?lat=${lat}&lon=${long}&APPID=84c375472712a1a880ffba2edbc74476`\n\n    const response: Response = yield call(fetch, url)\n    // @ts-ignore\n    const forecast = yield call(() => response.json())\n\n    const weather: Weather = {\n      main: forecast.weather[0].main,\n      description: forecast.weather[0].description,\n      dt: forecast.dt,\n      name: forecast.name,\n      temp: Math.ceil(parseFloat(forecast.main.temp) - 273.15),\n    }\n\n    yield put(loadWeatherSuccess(weather))\n  } catch (e) {\n    console.error('exampleLoadWeatherSaga error', e)\n  } finally {\n    yield put(setMainLoader(false))\n  }\n}\n\nexport function* rootUiSaga() {\n  yield all([takeEvery(LOAD_WEATHER, exampleLoadWeatherSaga)])\n}\n","import { all, fork } from 'redux-saga/effects'\nimport { rootUiSaga } from './ui'\n\nfunction* rootSaga() {\n  yield all([\n    fork(rootUiSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport './styles/index.scss'\nimport App from './components/App'\nimport { configureStore } from './redux/configureStore'\nimport history from './redux/router'\n\nconst store = configureStore()\n\nif (module.hot) module.hot.accept()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store, AnyAction } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport history from './router'\nimport { ApplicationState } from '../types'\n\nexport function configureStore(initialState?: ApplicationState): Store<ApplicationState> {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  // create store\n  const store: Store<ApplicationState> = createStore<ApplicationState, AnyAction, any, any>(\n    rootReducer,\n    initialState, // TODO: assign default value\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch(e => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}